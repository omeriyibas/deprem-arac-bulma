{"version":3,"sources":["constants/style-elements.js","component/VehicleItem.js","component/VehiclesList.js","constants/locations.js","util/dbUtil.js","screens/MainScreen.js","store/vehicle-context.js","screens/RegisterPeopleScreen.js","component/PoepleItem.js","component/PeoplesList.js","screens/PoepleListScreen.js","screens/AddVehicleScreen.js","App.js"],"names":["styleElements","colors","red","VehicleItem","item","navigaton","useNavigation","View","style","styles","vehicleItem","Text","textBase","description","name","contact","where","to","amountContainer","amount","totalPeoples","capacity","buttonsContainer","Pressable","buttonContainer","onPress","navigate","id","itemButton","StyleSheet","create","pressed","opacity","fontWeight","rowGap","flexDirection","paddingHorizontal","paddingVertical","backgroundColor","justifyContent","alignItems","borderRadius","minWidth","padding","marginVertical","elevation","shadowColor","gray500","shadowRadius","shadowOffset","width","height","shadowOpacity","color","fontSize","marginBottom","renderVehicleItem","ItemData","VehiclesList","vehicles","FlatList","data","renderItem","keyExtractor","locations1","locations2","URL","addVehicle","vehicleData","newData","peoples","axios","post","addRegister","userData","console","log","parseInt","count","push","put","fetchVehicle","response","get","fetchPoeples","fetchVehicles","key","vehicle","inputContainer","flex","inputsContainer","columnGap","container","paddingTop","paddingBottom","infoText","textAlign","marginTop","MainScreen","useState","setVehicles","filteredVehicles","setFilteredVehicles","loading","setLoading","setWhere","setTo","setContact","useEffect","fetchedVehicles","fetchVehiclesEffect","undefined","filter","includes","TextInput","mode","label","value","onChangeText","Autocomplete","onChange","event","newValue","options","renderInput","params","TextField","inputProps","muiTextInput","VehicleContext","createContext","vehicleNfo","deleteVehicle","updateVehicle","date","vehicle_contact","registerNfo","vehiclesReducer","state","action","type","updatableVehicleIndex","findIndex","payload","updatedItem","updatedVehicles","selectedVehicleIndex","selectedVehicle","VehiclesContextProvider","children","useReducer","vehiclesState","dispatch","Provider","RegisterPeopleScreen","route","navigation","setName","ilce","setIlce","setCount","setVehicle","fetchedVehicle","fetchVehicleEffect","Button","buttonColor","PeopleItem","expenseItem","renderPoepleItem","PoepleItem","PoeplesList","poeples","PoepleListScreen","setPoeples","fetchedPoeples","fetchPoeplesEffect","muiTextField","AddVehicleScreen","setCapacity","keyboardType","Stack","createNativeStackNavigator","prefix","createURL","App","NavigationContainer","linking","config","screens","home","register","view","addvehicle","Navigator","Screen","component","headerTitle","headerRight","icon","headerLeft"],"mappings":"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","file":"static/js/app.fe6ee54e.chunk.js","sourcesContent":["export const styleElements = {\n  colors: {\n    red:\"#a93226\"\n    // white:\n    // primary50: '#e4d9fd',\n    // primary100: '#c6affc',\n    // primary200: '#a281f0',\n    // primary400: '#5721d4',\n    // primary500: '#3e04c3',\n    // primary700: '#2d0689',\n    // primary800: '#200364',\n    // accent500: '#f7bc0c',\n    // error50: '#fcc4e4',\n    // error500: '#9b095c',\n    // gray500: '#39324a',\n    // gray700: '#221c30',\n  },\n};\n","import {View, StyleSheet, Pressable} from \"react-native-web\";\nimport {styleElements} from \"../constants/style-elements\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {Text} from \"react-native-paper\";\n\n\nfunction VehicleItem(item) {\n    const navigaton = useNavigation();\n\n    return (\n        //     onPress={vehiclePressHandler}\n        //     style={({pressed}) => pressed && styles.pressed}\n        // >\n        <View style={styles.vehicleItem}>\n            {/*<Text*/}\n            <View>\n                <Text style={[styles.textBase, styles.description]}>\n                    {item.name}\n                </Text>\n                <Text style={styles.textBase}>\n                    Tel No: {item.contact}\n                </Text>\n                <Text style={styles.textBase}>\n                    {item.where}->{item.to}\n                </Text>\n            </View>\n            <View style={styles.amountContainer}>\n                <Text style={styles.amount}>\n                    Kapasite\n                </Text>\n                <Text style={styles.amount}>\n                    {item.totalPeoples}/{item.capacity}\n                </Text>\n                <View style={styles.amountContainer}>\n\n                </View>\n            </View>\n\n            <View style={styles.buttonsContainer}>\n                <Pressable style={styles.buttonContainer}\n                           onPress={() => navigaton.navigate(\"view\", {contact: item.contact,id:item.id,where:item.where,to:item.to})}>\n                    <Text style={styles.itemButton}>\n                        Yolcular\n                    </Text>\n                </Pressable>\n                <Pressable style={styles.buttonContainer}\n                           onPress={() => navigaton.navigate(\"register\", {contact: item.contact,id:item.id,where:item.where,to:item.to})}>\n                    <Text style={styles.itemButton}>\n                        Yolcu Ekle\n                    </Text>\n                </Pressable>\n            </View>\n        </View>\n    )\n}\n\nexport default VehicleItem;\n\nconst styles = StyleSheet.create({\n    pressed: {\n        opacity: 0.75,\n    },\n\n    itemButton: {\n        // color: styleElements.colors.primary500,\n        fontWeight: 'bold',\n    },\n\n    buttonsContainer: {\n        rowGap: 5,\n        flexDirection: 'column',\n        // paddingHorizontal: 12,\n        // paddingVertical: 4,\n        // backgroundColor: 'white',\n        // justifyContent: 'center',\n        // alignItems: 'center',\n        // borderRadius: 4,\n        // minWidth: 80,\n    },\n\n    buttonContainer: {\n        // flexDirection: 'row',\n        paddingHorizontal: 12,\n        paddingVertical: 4,\n        backgroundColor: 'white',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 4,\n        minWidth: 80,\n    },\n\n    vehicleItem: {\n        padding: 12,\n        marginVertical: 8,\n        backgroundColor: styleElements.colors.red,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderRadius: 6,\n        elevation: 3,\n        shadowColor: styleElements.colors.gray500,\n        shadowRadius: 4,\n        shadowOffset: {width: 1, height: 1},\n        shadowOpacity: 0.4,\n    },\n    textBase: {\n        color: \"white\",\n    },\n    description: {\n        fontSize: 16,\n        marginBottom: 4,\n        fontWeight: 'bold',\n    },\n    amountContainer: {\n        paddingHorizontal: 12,\n        paddingVertical: 4,\n        // backgroundColor: 'white',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 4,\n        // minWidth: 80,\n    },\n    amount: {\n        color: \"white\",\n        fontWeight: 'bold',\n    },\n});","import {FlatList} from \"react-native-web\";\nimport VehicleItem from \"./VehicleItem\";\n\nfunction renderVehicleItem(ItemData){\n    return <VehicleItem {...ItemData.item}/>\n}\n\nfunction VehiclesList({vehicles}) {\n    return (\n        <FlatList\n            data={vehicles}\n            renderItem={renderVehicleItem}\n            keyExtractor={(item)=>item.contact}\n        />\n    )\n}\n\nexport default VehiclesList;","export const locations1 = ['Kahramanmaraş', 'Gaziantep', 'Malatya', 'Diyarbakır', 'Kilis', 'Şanlıurfa', 'Adıyaman', 'Hatay', 'Osmaniye', 'Adana']\nexport const locations2 = ['Adana', 'Adıyaman', 'Afyonkarahisar', 'Ağrı', 'Aksaray', 'Amasya', 'Ankara', 'Antalya', 'Ardahan', 'Artvin', 'Aydın', 'Balıkesir', 'Bartın', 'Batman', 'Bayburt', 'Bilecik', 'Bingöl', 'Bitlis', 'Bolu', 'Burdur', 'Bursa', 'Çanakkale', 'Çankırı', 'Çorum', 'Denizli', 'Diyarbakır', 'Düzce', 'Edirne', 'Elâzığ', 'Erzincan', 'Erzurum', 'Eskişehir', 'Gaziantep', 'Giresun', 'Gümüşhane', 'Hakkâri', 'Hatay', 'Iğdır', 'Isparta', 'İstanbul', 'İzmir', 'Kahramanmaraş', 'Karabük', 'Karaman', 'Kars', 'Kastamonu', 'Kayseri', 'Kırıkkale', 'Kırklareli', 'Kırşehir', 'Kilis', 'Kocaeli', 'Konya', 'Kütahya', 'Malatya', 'Manisa', 'Mardin', 'Mersin', 'Muğla', 'Muş', 'Nevşehir', 'Niğde', 'Ordu', 'Osmaniye', 'Rize', 'Sakarya', 'Samsun', 'Siirt', 'Sinop', 'Sivas', 'Şanlıurfa', 'Şırnak', 'Tekirdağ', 'Tokat', 'Trabzon', 'Tunceli', 'Uşak', 'Van', 'Yalova', 'Yozgat', 'Zonguldak']\n\n","import axios from 'axios';\n\nconst URL =\n    'https://deprem-arac-bulma-default-rtdb.europe-west1.firebasedatabase.app/';\n\n\nexport async function addVehicle(vehicleData) {\n    // console.log(vehicleData)\n    const newData = {...vehicleData, peoples: [], totalPeoples: 0}\n    const response = await axios.post(URL + '/vehicles.json', newData);\n    const id = response.data.name;\n    return id;\n}\n\nexport async function addRegister(id,vehicleData, userData) {\n    console.log(vehicleData)\n    // let newPoeples;\n    // let newTotalPeoples;\n    vehicleData.totalPeoples += parseInt(userData.count)\n    if (vehicleData.peoples) {\n        vehicleData.peoples.push(userData)\n        const response = await axios.put(URL + `/vehicles/${id}.json`, vehicleData);\n        // //     vehicleData.totalPeoples += parseInt(userData.count)\n    } else {\n        const newData={...vehicleData,peoples:[userData]}\n        const response = await axios.put(URL + `/vehicles/${id}.json`, newData);\n    }\n}\n\nexport async function fetchVehicle(id) {\n    const response = await axios.get(URL + `/vehicles/${id}.json`);\n    console.log(response.data.peoples)\n    return {...response.data}\n}\n\nexport async function fetchPoeples(id) {\n    const response = await axios.get(URL + `/vehicles/${id}.json`);\n    // console.log(response.data.peoples)\n\n    return response.data.peoples\n}\n\n\nexport async function fetchVehicles() {\n    const response = await axios.get(URL + `/vehicles.json`);\n\n    const vehicles = [];\n\n    for (const key in response.data) {\n        const vehicle = {\n            id: key,\n            contact: response.data[key].contact,\n            name: response.data[key].name,\n            capacity: response.data[key].capacity,\n            where: response.data[key].where,\n            to: response.data[key].to,\n            peoples: response.data[key].peoples,\n            totalPeoples: response.data[key].totalPeoples\n\n        }\n        vehicles.push(vehicle)\n    }\n\n    // console.log(vehicles)\n\n    return vehicles\n}","import {FlatList, StyleSheet, View} from \"react-native-web\";\n// import {useContext, useEffect, useState} from \"react\";\n// import {VehicleContext} from \"../store/vehicle-context\";\nimport {styleElements} from \"../constants/style-elements\";\nimport VehiclesList from \"../component/VehiclesList\";\nimport {Autocomplete, TextField} from \"@mui/material\";\nimport {locations1, locations2} from \"../constants/locations\";\nimport {fetchVehicles} from \"../util/dbUtil\";\nimport {useEffect, useState} from \"react\";\nimport {TextInput} from \"react-native-paper\";\n\nfunction MainScreen() {\n    // const vehicleContext = useContext(VehicleContext);\n    // const vehicles = vehicleContext.vehicles;\n    // const vehicles=fetchVehicles()\n    const [vehicles, setVehicles] = useState([]);\n    const [filteredVehicles, setFilteredVehicles] = useState(vehicles);\n\n    const [loading, setLoading] = useState(true);\n\n\n    // console.log(vehicles)\n\n\n    const [where, setWhere] = useState(locations1[-1]);\n    const [to, setTo] = useState(locations2[-1]);\n    const [contact, setContact] = useState(\"\");\n\n\n    useEffect(() => {\n        async function fetchVehiclesEffect() {\n            const fetchedVehicles = await fetchVehicles();\n            setVehicles(fetchedVehicles)\n            setFilteredVehicles(fetchedVehicles)\n            setLoading(false)\n        }\n\n        fetchVehiclesEffect();\n    }, [])\n\n    useEffect(() => {\n        if (where !== undefined && where !== null) {\n            setFilteredVehicles(vehicles.filter((vehicle) => vehicle.where === where))\n        } else {\n            setFilteredVehicles(vehicles)\n        }\n\n        if (where !== undefined && where !== null) {\n            setFilteredVehicles(vehicles.filter((vehicle) => vehicle.where === where))\n        } else {\n            setFilteredVehicles(vehicles)\n        }\n    }, [where])\n\n    useEffect(() => {\n        console.log(\"asd\")\n        setFilteredVehicles(vehicles.filter((vehicle) => vehicle.contact.includes(contact)))\n        //\n        // if (where !== undefined && where !== null) {\n        // } else {\n        //     setFilteredVehicles(vehicles)\n        // }\n    }, [contact])\n    return (\n        <>\n            <View style={styles.container}>\n                <TextInput\n                    mode={\"outlined\"}\n                    label=\"İletişim No\"\n                    value={contact}\n                    onChangeText={contact => setContact(contact)}\n                />\n                <View style={styles.inputsContainer}>\n                    <View style={styles.inputContainer}>\n                        <Autocomplete\n                            label=\"Nerden\"\n                            value={where}\n                            onChange={(event, newValue) => {\n                                setWhere(newValue);\n                            }}\n                            options={locations1}\n                            renderInput={(params) => <TextField inputProps={{style: styles.muiTextInput}} {...params}\n                                                                label=\"Nerden\"/>}\n                        />\n                    </View>\n                    <View style={styles.inputContainer}>\n                        <Autocomplete\n                            label=\"Nereye\"\n                            value={to}\n                            onChange={(event, newValue) => {\n                                setTo(newValue);\n                            }}\n                            options={locations2}\n                            renderInput={(params) => <TextField inputProps={{style: styles.muiTextInput}} {...params}\n                                                                label=\"Nereye\"/>}\n                        />\n                    </View>\n                </View>\n\n                {!loading && <VehiclesList vehicles={filteredVehicles}/>}\n            </View>\n        </>\n\n        // <FlatList\n        //     data={vehicles}\n        //     renderItem={renderVehicleItem}\n        //     keyExtractor={(item) => item.contact}\n        // />\n        // <Text>\n        //     Arac Listesi\n        // </Text>\n    )\n}\n\nconst styles = StyleSheet.create({\n    inputContainer: {\n        flex: 1,\n    },\n    inputsContainer: {\n        // flex: 1,\n        padding: 8,\n        backgroundColor: \"white\",\n        borderRadius: 6,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        columnGap: 50,\n        alignItems: 'center',\n    },\n    container: {\n        flex: 1,\n        paddingHorizontal: 24,\n        paddingTop: 24,\n        paddingBottom: 0,\n        // backgroundColor: \"red\",\n        rowGap: 20\n    },\n    infoText: {\n        color: 'white',\n        fontSize: 16,\n        textAlign: 'center',\n        marginTop: 32,\n    },\n});\nexport default MainScreen;","import {createContext, useReducer} from 'react';\n\n// const DUMMY_EXPENSES = [\n//     {\n//         contact: '531468912',\n//         name: \"Abdullah İyibaş\",\n//         where: \"GaziAntep\",\n//         to: \"İstanbul\",\n//         capacity: \"5\",\n//         totalPeoples:0,\n//         peoples: [{\n//             contact: \"54131867\",\n//             name: \"asdsadxz zxczx\",\n//             ilce: \"asdasd\",\n//             count:\"10\"\n//         },\n//             {\n//                 contact: \"5644651\",\n//                 name: \"asdasd xzczxc\",\n//                 ilce: \"rewre\",\n//                 count:\"20\"\n//             }]\n//     },\n// ];\n\nexport const VehicleContext = createContext({\n    vehicles: [],\n    addVehicle: (vehicleNfo) => {\n    },\n    // setVehicle:(vehicle)=>{},\n    deleteVehicle: (id) => {\n    },\n    updateVehicle: (id, {description, amount, date}) => {\n    },\n    addRegister: (vehicle_contact, registerNfo) => {\n    }\n});\n\nfunction vehiclesReducer(state, action) {\n    switch (action.type) {\n        case 'ADD':\n            // const id = new Date().toString() + Math.random().toString();\n            const updatableVehicleIndex = state.findIndex(\n                (vehicle) => vehicle.contact === action.payload.contact\n            );\n            console.log(updatableVehicleIndex)\n            if (updatableVehicleIndex!==-1) {\n                const updatableVehicle = state[updatableVehicleIndex];\n                const updatedItem = {...updatableVehicle, ...action.payload};\n                const updatedVehicles = [...state];\n                updatedVehicles[updatableVehicleIndex] = updatedItem;\n                return updatedVehicles;\n            }\n            return [{...action.payload,peoples:[],totalPeoples:0}, ...state];\n        case \"ADDREGISTER\":\n            const selectedVehicleIndex = state.findIndex(\n                (vehicle) => vehicle.contact === action.payload.vehicle_contact\n            );\n            const selectedVehicle = state[selectedVehicleIndex];\n            selectedVehicle.peoples.push(action.payload.userData)\n            selectedVehicle.totalPeoples+=parseInt(action.payload.userData.count)\n            const updatedVehicles = [...state]\n            updatedVehicles[selectedVehicleIndex] = selectedVehicle\n            return updatedVehicles;\n\n\n        // case 'UPDATE':\n        //     const updatableVehicleIndex = state.findIndex(\n        //         (vehicle) => vehicle.id === action.payload.id\n        //     );\n        //     const updatableVehicle = state[updatableVehicleIndex];\n        //     const updatedItem = {...updatableVehicle, ...action.payload.data};\n        //     const updatedVehicles = [...state];\n        //     updatedVehicles[updatableVehicleIndex] = updatedItem;\n        //     return updatedVehicles;\n        case 'DELETE':\n            return state.filter((vehicle) => vehicle.id !== action.payload);\n        default:\n            return state;\n    }\n}\n\nfunction VehiclesContextProvider({children}) {\n    const [vehiclesState, dispatch] = useReducer(vehiclesReducer, []);\n\n    function addVehicle(vehicleData) {\n        dispatch({type: 'ADD', payload: vehicleData});\n    }\n\n    function deleteVehicle(id) {\n        dispatch({type: 'DELETE', payload: id});\n    }\n\n    function updateVehicle(id, vehicleData) {\n        dispatch({type: 'UPDATE', payload: {id: id, data: vehicleData}});\n    }\n\n    function addRegister(vehicle_contact, userData) {\n        dispatch({type: 'ADDREGISTER', payload: {vehicle_contact: vehicle_contact, userData: userData}});\n    }\n\n    const value = {\n        vehicles: vehiclesState,\n        addVehicle: addVehicle,\n        deleteVehicle: deleteVehicle,\n        updateVehicle: updateVehicle,\n        addRegister: addRegister\n    };\n\n    return (\n        <VehicleContext.Provider value={value}>\n            {children}\n        </VehicleContext.Provider>\n    );\n}\n\nexport default VehiclesContextProvider;","import {Text, StyleSheet, View} from \"react-native-web\";\nimport {styleElements} from \"../constants/style-elements\";\nimport {Button, TextInput} from \"react-native-paper\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {VehicleContext} from \"../store/vehicle-context\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {addRegister, fetchVehicle, fetchVehicles} from \"../util/dbUtil\";\n\nfunction RegisterPeopleScreen({route, navigation}) {\n    const [contact, setContact] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [ilce, setIlce] = useState(\"\");\n    const [count, setCount] = useState(\"\");\n    const [vehicle, setVehicle] = useState({});\n\n\n    // const vehicleCtx = useContext(VehicleContext);\n    const navgation = useNavigation()\n\n    useEffect(() => {\n        async function fetchVehicleEffect() {\n            const fetchedVehicle = await fetchVehicle(route.params.id)\n            setVehicle(fetchedVehicle)\n            console.log(fetchedVehicle)\n            // setFilteredVehicles(fetchedVehicle)\n            // setLoading(false)\n        }\n\n        fetchVehicleEffect();\n    }, [])\n\n\n    async function save() {\n        if (contact !== \"\") {\n            const registerNfo = {\n                contact: contact,\n                name: name,\n                ilce: ilce,\n                count: count\n            }\n            await addRegister(route.params.id, vehicle, registerNfo)\n            // vehicleCtx.addRegister(route.params.contact, registerNfo)\n            navigation.navigate(\"home\")\n        }\n\n\n    }\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                mode={\"outlined\"}\n                label=\"İletişim No\"\n                value={contact}\n                onChangeText={contact => setContact(contact)}\n            />\n            <TextInput\n                mode={\"outlined\"}\n                label=\"Ad Soyad\"\n                value={name}\n                onChangeText={name => setName(name)}\n            />\n            <TextInput\n                mode={\"outlined\"}\n                label=\"İlçe\"\n                value={ilce}\n                onChangeText={ilce => setIlce(ilce)}\n            />\n            <TextInput\n                mode={\"outlined\"}\n                label=\"Kişi Sayısı\"\n                value={count}\n                onChangeText={count => setCount(count)}\n            />\n            <View style={styles.buttonContainer}>\n                <Button mode=\"contained\" onPress={save} buttonColor={styleElements.colors.red}>\n                    Kaydet\n                </Button>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        rowGap: 20,\n        // flexDirection: \"row\",\n        flex: 1,\n        padding: 50,\n        // backgroundColor: styleElements.colors.red,\n        // justifyContent: \"center\"\n\n    },\n    buttonContainer: {\n        flexDirection: \"row\",\n        // flex: 1,\n        // width: \"50%\",\n        justifyContent: \"center\"\n    },\n})\n\nexport default RegisterPeopleScreen;","import {View, StyleSheet, Text, Pressable} from \"react-native-web\";\nimport {styleElements} from \"../constants/style-elements\";\nimport {useNavigation} from \"@react-navigation/native\";\n\n\nfunction PeopleItem(item) {\n    // const navigaton = useNavigation();\n    //\n    // function vehiclePressHandler() {\n    //     navigaton.navigate(\"Register\", {contact: item.contact})\n    // }\n\n    return (\n        // <Pressable\n        //     onPress={vehiclePressHandler}\n        //     style={({pressed}) => pressed && styles.pressed}\n        // >\n            <View style={styles.expenseItem}>\n                <View>\n                    <Text style={[styles.textBase, styles.description]}>\n                        {item.name}\n                    </Text>\n                    <Text style={styles.textBase}>\n                        Tel No: {item.contact}\n                    </Text>\n                </View>\n                <View style={styles.amountContainer}>\n                    <Text style={styles.amount}>\n                        Kişi Sayısı: {item.count}\n                    </Text>\n                </View>\n            </View>\n        // </Pressable>\n    )\n}\n\nexport default PeopleItem;\n\nconst styles = StyleSheet.create({\n    pressed: {\n        opacity: 0.75,\n    },\n    expenseItem: {\n        padding: 12,\n        marginVertical: 8,\n        backgroundColor: styleElements.colors.red,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        borderRadius: 6,\n        elevation: 3,\n        shadowColor: styleElements.colors.red,\n        shadowRadius: 4,\n        shadowOffset: {width: 1, height: 1},\n        shadowOpacity: 0.4,\n    },\n    textBase: {\n        color: \"white\",\n    },\n    description: {\n        fontSize: 16,\n        marginBottom: 4,\n        fontWeight: 'bold',\n    },\n    amountContainer: {\n        paddingHorizontal: 12,\n        paddingVertical: 4,\n        // backgroundColor: 'white',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 4,\n        minWidth: 80,\n    },\n    amount: {\n        color: \"white\",\n        fontWeight: 'bold',\n    },\n});","import {FlatList} from \"react-native-web\";\nimport VehicleItem from \"./VehicleItem\";\nimport PoepleItem from \"./PoepleItem\";\n\nfunction renderPoepleItem(ItemData){\n    return <PoepleItem {...ItemData.item}/>\n}\n\nfunction PoeplesList({poeples}) {\n    return (\n        <FlatList\n            data={poeples}\n            renderItem={renderPoepleItem}\n            keyExtractor={(item)=>item.contact}\n        />\n    )\n}\n\nexport default PoeplesList;","import {StyleSheet, View} from \"react-native-web\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {styleElements} from \"../constants/style-elements\";\nimport {VehicleContext} from \"../store/vehicle-context\";\nimport PoeplesList from \"../component/PeoplesList\";\nimport {fetchPoeples, fetchVehicles} from \"../util/dbUtil\";\n\n\nfunction PoepleListScreen({route, navigation}) {\n    // const vehicles = useContext(VehicleContext).vehicles;\n    // const poeples=vehicles.find(vehicle=>vehicle.contact===route.params.contact).peoples\n    const [poeples, setPoeples] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function fetchPoeplesEffect()\n        {\n            // console.log(\"asd\")\n            const fetchedPoeples = await fetchPoeples(route.params.id)\n            setPoeples(fetchedPoeples)\n            // setFilteredVehicles(fetchedVehicles)\n            setLoading(false)\n        }\n        fetchPoeplesEffect();\n    }, [])\n\n    return (\n        <View style={styles.container}>\n            {!loading && <PoeplesList poeples={poeples}/>}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingHorizontal: 24,\n        paddingTop: 24,\n        paddingBottom: 0,\n        // backgroundColor: styleElements.colors.red,\n    },\n    infoText: {\n        color: 'white',\n        fontSize: 16,\n        textAlign: 'center',\n        marginTop: 32,\n    },\n});\nexport default PoepleListScreen;","import {Text, StyleSheet, View} from \"react-native-web\";\nimport {styleElements} from \"../constants/style-elements\";\nimport {Button, TextInput} from \"react-native-paper\";\n// import {useContext, useState} from \"react\";\n// import {VehicleContext} from \"../store/vehicle-context\";\nimport {locations1, locations2} from \"../constants/locations\";\nimport {Autocomplete, TextField} from \"@mui/material\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {addVehicle} from \"../util/dbUtil\";\nimport {useState} from \"react\";\n\nfunction AddVehicleScreen({route, navigation}) {\n    const [contact, setContact] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [where, setWhere] = useState(locations1[-1]);\n    const [to, setTo] = useState(locations2[-1]);\n    const [capacity, setCapacity] = useState(undefined);\n\n\n    // const vehicleCtx = useContext(VehicleContext);\n    const navgation = useNavigation()\n\n\n    async function save() {\n        if (contact !== \"\") {\n            const vehicleNfo = {\n                contact: contact,\n                name: name,\n                where: where,\n                to: to,\n                capacity: capacity\n            }\n\n            await addVehicle(vehicleNfo)\n\n            // vehicleCtx.addVehicle({...vehicleNfo,id:id})\n\n\n            navigation.navigate(\"home\")\n        }\n\n    }\n\n    return (\n        <View style={styles.container}>\n            <TextInput\n                mode={\"outlined\"}\n                label=\"İletişim No\"\n                value={contact}\n                onChangeText={contact => setContact(contact)}\n            />\n            <TextInput\n                mode={\"outlined\"}\n                label=\"Ad Soyad\"\n                value={name}\n                onChangeText={name => setName(name)}\n            />\n            <TextInput\n                keyboardType='numeric'\n                mode={\"outlined\"}\n                label=\"Araç Kapasitesi\"\n                value={capacity}\n                onChangeText={capacity => setCapacity(capacity)}\n            />\n            <Autocomplete\n                label=\"Nerden\"\n                value={where}\n                onChange={(event, newValue) => {\n                    setWhere(newValue);\n                }}\n                options={locations1}\n                renderInput={(params) => <TextField inputProps={{style: styles.muiTextInput}} {...params}\n                                                    label=\"Nerden\"/>}\n            />\n\n            <Autocomplete\n                label=\"Nereye\"\n                value={to}\n                onChange={(event, newValue) => {\n                    setTo(newValue);\n                }}\n                options={locations2}\n                renderInput={(params) => <TextField {...params} label=\"Nereye\"/>}\n            />\n            <View style={styles.buttonContainer}>\n                <Button mode=\"contained\" onPress={save} buttonColor={styleElements.colors.red}>\n                    Kaydet\n                </Button>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    muiTextField: {backgroundColor: \"white\"},\n    container: {\n        rowGap: 20,\n        // flexDirection: \"row\",\n        flex: 1,\n        padding: 50,\n        // backgroundColor: styleElements.colors.primary800,\n        // justifyContent: \"center\"\n\n    },\n    buttonContainer: {\n        flexDirection: \"row\",\n        // flex: 1,\n        // width: \"50%\",\n        justifyContent: \"center\"\n    },\n})\n\nexport default AddVehicleScreen;","import {StatusBar} from 'expo-status-bar';\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport MainScreen from \"./screens/MainScreen\";\nimport VehiclesContextProvider from \"./store/vehicle-context\";\nimport RegisterPeopleScreen from \"./screens/RegisterPeopleScreen\";\nimport {Text} from \"react-native-web\";\nimport PoepleListScreen from \"./screens/PoepleListScreen\";\nimport {Button} from \"react-native-paper\";\nimport AddVehicleScreen from \"./screens/AddVehicleScreen\";\nimport {createURL} from \"expo-linking\";\n\n\nconst Stack = createNativeStackNavigator();\n// const location = useLocation()\n\nconst prefix = createURL('/');\n\nexport default function App() {\n    console.log(prefix)\n    const linking = {\n        // prefixes:[prefix],\n        config: {\n            screens: {\n                home: \"/\",\n                register: \"/register\",\n                view: \"/view\",\n                addvehicle: \"/addvehicle\"\n                // NotFound: \"404\"\n            }\n        },\n    };\n    return (\n        <>\n            {/*<StatusBar style={\"auto\"}/>*/}\n            <VehiclesContextProvider>\n                <NavigationContainer linking={linking}>\n                    <Stack.Navigator>\n                        <Stack.Screen name={\"home\"} component={MainScreen}\n                                      options={({navigation}) => ({\n                                          headerTitle: () => <Text>Araç Listesi</Text>,\n                                          headerRight: () => <Button icon={\"plus\"}\n                                                                     onPress={() => navigation.navigate(\"addvehicle\")}/>,\n                                      })}/>\n                        <Stack.Screen name={\"register\"} component={RegisterPeopleScreen}\n                                      options={({route}) => ({\n                                          headerTitle: () =>\n                                              <Text>{route.params.contact} {route.params.where} -> {route.params.to}</Text>,\n                                          headerLeft: false,\n                                      })}/>\n                        <Stack.Screen name={\"view\"} component={PoepleListScreen}\n                                      options={({route}) => ({\n                                          headerTitle: () =>\n                                              <Text>{route.params.contact} {route.params.where} -> {route.params.to}</Text>,\n                                          headerLeft: false\n                                      })}/>\n                        <Stack.Screen name={\"addvehicle\"} component={AddVehicleScreen}\n                                      options={({route}) => ({\n                                          headerTitle: () => <Text>Araç Ekle</Text>,\n                                          headerLeft: false\n                                      })}/>\n\n                    </Stack.Navigator>\n\n                </NavigationContainer>\n            </VehiclesContextProvider>\n        </>\n    );\n}\n"],"sourceRoot":""}